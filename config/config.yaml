# config/config.yaml
# Enhanced Production-Ready Configuration for EDI Claims Processor
# ================================================================
# This version has been optimized for Windows SQL Server connectivity

# Environment Configuration
# -------------------------
environment:
  name: "development" # development, staging, production
  region: "us-east-1"
  instance_id: "edi-proc-001"
  debug_mode: false # Should be false in production
  log_sensitive_data: false # CRITICAL: Must be false in production

# Database Configurations
# -----------------------
# PostgreSQL connection (Staging & Metrics Database)
postgres_staging:
  host: "localhost"
  port: 5432
  database: "edi_staging"
  user: "postgres"
  password: "ClearToFly1" # CHANGE ME for production
  
  # Connection Pool Settings
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 1800
  pool_pre_ping: true
  
  # Performance Settings
  connect_timeout: 10
  statement_timeout: 300000
  idle_in_transaction_session_timeout: 60000
  
  # SSL Configuration
  ssl_mode: "prefer"
  ssl_cert: ""
  ssl_key: ""
  ssl_ca: ""

# SQL Server connection (Production Database)
# IMPORTANT: This configuration has been optimized for Windows with SQL Server
sql_server_production:
  # Use 'server' instead of 'host' for SQL Server (supports comma notation for port)
  server: "localhost,1433"  # hostname,port format for SQL Server
  host: "localhost"         # Fallback host field
  port: 1433               # Fallback port field
  database: "edi_production"
  
  # Authentication Configuration
  user: "sa"
  password: "ClearToFly1" # CHANGE ME for production
  trusted_connection: "no" # Set to "yes" for Windows Authentication
  
  # CRITICAL: Specify the exact ODBC driver installed on your system
  # Common options (check which one you have installed):
  driver: "ODBC Driver 17 for SQL Server"    # Most common modern driver
  # driver: "ODBC Driver 18 for SQL Server"  # Newer alternative
  # driver: "SQL Server"                     # Legacy driver
  # driver: "SQL Server Native Client 11.0"  # Older alternative
  
  # Connection Pool Settings
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 1800
  pool_pre_ping: true
  
  # Performance Settings
  connect_timeout: 15
  command_timeout: 300
    
  # Additional Connection Parameters for SQL Server
  mars_connection: true
  encrypt: "yes"
  trust_server_certificate: "yes" # Set to 'yes' for local dev, 'no' for prod
  
  # SQL Server specific optimizations
  fast_executemany: true
  autocommit: false

# Processing Parameters
# ---------------------
processing:
  batch_size: 2000
  max_concurrent_batches: 4
  batch_timeout_seconds: 900
  pipeline_max_queue_size: 4000
  queue_high_watermark_factor: 0.85
  queue_low_watermark_factor: 0.25
  min_cpu_workers: 2
  max_cpu_workers: 8
  min_io_workers: 4
  max_io_workers: 16
  target_throughput_claims_per_sec: 6667
  max_processing_time_per_claim_ms: 150
  reimbursement_conversion_factor: 36.04
  rvu_calculation_timeout_ms: 100
  max_retries_edi_parsing: 3
  retry_delay_seconds_edi: [1, 5, 15]
  max_retry_attempts_per_claim_stage: 3
  max_memory_usage_mb_alert_threshold: 3072

# Machine Learning Model Configuration
# -----------------------------------
ml_model:
  model_directory: "ml_model/versions"
  model_filename: "model.pkl"
  preprocessor_filename: "preprocessor.pkl"
  metadata_filename: "model_metadata.json"
  active_model_version: "latest"
  prediction_confidence_threshold: 0.80
  fallback_rules_on_low_confidence: true
  feature_engineering:
    numerical_features: ['total_charge_amount', 'patient_age', 'num_diagnoses', 'num_line_items']
    categorical_features: ['facility_type_code', 'payer_category_code']
    target_column: 'target_filter_id'
  prediction_timeout_ms: 250
  batch_prediction_size: 100
  model_cache_size: 2
  training_data_path: "data/ml_training_data/claims_with_filters.csv"
  test_split_ratio: 0.2
  model_params:
    n_estimators: 150
    max_depth: 20
    min_samples_split: 5
    min_samples_leaf: 3
    class_weight: 'balanced_subsample'
    random_state: 42

# File Paths and Storage
# ---------------------
file_paths:
  log_dir: "logs/"
  metrics_dir: "metrics/"
  health_check_dir: "health/"

# Logging Configuration
# ---------------------
logging:
  level: "INFO"
  structured: true
  console_json: false
  log_format: "%(asctime)s - %(name)s - %(levelname)s - %(correlation_id)s - %(message)s"
  log_dir: "logs/"
  app_log_file: "app.log"
  error_log_file: "error.log"
  performance_log_file: "performance.log"
  max_bytes: 20971520 # 20MB
  backup_count: 10
  sqlalchemy_level: "WARNING"
  audit_logging:
    enabled: true
    audit_log_file: "audit.log"
    log_level: "INFO"
    max_bytes: 52428800 # 50MB
    backup_count: 20
    include_user_id: true
    include_ip_address: false
    include_resource_id: true
    include_action_details: true
    log_data_modifications:
      staging_db: true
      production_db: true
      failed_claims_db: true

# Error Handling Configuration
# --------------------------
error_handling:
  circuit_breaker:
    failure_threshold: 5
    recovery_timeout_seconds: 60
    success_threshold_to_close: 3
  default_max_retries: 3
  default_retry_delay_seconds: 2
  default_retry_backoff_factor: 2.0
  dlq:
    enabled: false
    type: "file"
    file_path: "data/dead_letter_queue/failed_items.jsonl"
  report_detailed_stack_traces_in_api: false
  error_categories_for_ui_filter:
    - "Validation"
    - "Parsing"
    - "Database"
    - "MachineLearning"
    - "Configuration"
    - "ExternalService"
  auto_recovery:
    db_reconnect_enabled: true
    cache_refresh_enabled: true
    ml_model_reload_enabled: true

# API Configuration
# ----------------
api:
  host: "0.0.0.0"
  port: 8000
  workers: 4
  rate_limiting_enabled: true
  default_rate_limit: "1000/minute"
  admin_rate_limit: "100/hour"
  cors_origins: ["http://localhost:3000", "http://127.0.0.1:3000"]
  jwt_secret_key: "your-very-secret-key-keep-safe" # CHANGE ME
  jwt_algorithm: "HS256"
  jwt_token_expire_minutes: 60

# Caching Configuration
# --------------------
caching:
  rvu_cache_type: "in_memory"
  rvu_cache_ttl_seconds: 3600
  enable_cache_warming: true
  warming_batch_size: 1000
  api_cache_enabled: true
  api_cache_ttl_seconds: 300
  redis:
    enabled: false
    host: "localhost"
    port: 6379
    password: ""
    db_api_cache: 0
    db_app_cache: 1
    url: "redis://localhost:6379/0"

# Security Configuration
# ----------------------
security:
  # IMPORTANT: These keys should be stored securely and not hardcoded here in production.
  # These are placeholders only. Generate your own secure keys.
  pii_phi_encryption_key_env_var: "your_secure_32_byte_url_safe_base64_key" # CHANGE ME
  hashing_salt_env_var: "your_secure_random_salt" # CHANGE ME
  mask_pii_in_logs: true
  mask_pii_in_failed_claim_snapshot: true

# Monitoring and Alerting
# -----------------------
monitoring:
  system_monitoring_enabled: true
  system_monitor_interval_seconds: 60
  connection_metrics_logging_enabled: true
  connection_metrics_log_interval_seconds: 120
  db_timeout_threshold_ms: 5000
  memory_threshold_percent: 85
  disk_threshold_percent: 90
  cpu_threshold_percent: 80

alerting:
  notifications_enabled: true
  check_interval_seconds: 60
  auto_start_monitoring: true
  email:
    enabled: false
    smtp_server: ""
    smtp_port: 587
    username: ""
    password: "" # CHANGE ME
    from_email: "edi-alerts@example.com"
    to_emails: ["admin1@example.com", "ops-team@example.com"]
  webhook:
    enabled: false
    url: ""
    method: "POST"
    headers:
      Content-Type: "application/json"

# UI Services Configuration
# -------------------------
ui_services:
  failed_claims_ui:
    default_page_size: 50
    max_page_size: 200
    sync_status_refresh_interval_seconds_client: 60
  analytics_dashboard:
    default_timespan_days: 30

# Performance specific configurations
# ----------------------------------
performance:
  enable_read_write_splitting: false
  postgres_read_replica_host: ""
  sql_server_read_replica_server: ""
  default_pool_size: 15
  default_max_overflow: 25
  default_pool_timeout: 30
  default_pool_recycle: 1800
  default_connect_timeout: 10
  default_health_check_interval_seconds: 30
  default_max_retries_on_failure: 3
  default_cb_failure_threshold: 5
  default_cb_recovery_timeout_seconds: 60
  auto_scale_check_interval_seconds: 15
  metrics_report_interval_seconds: 60

# Feature Flags
# -------------
feature_flags:
  use_enhanced_ml_model_v2: false
  enable_experimental_validation_rules: false
  enable_realtime_dashboard_api_caching: true

# Windows-specific settings
# -------------------------
windows_settings:
  # SQL Server connection debugging
  sql_server_debug_connection: false
  sql_server_connection_timeout: 30
  sql_server_login_timeout: 60
  
  # ODBC Driver debugging
  enable_odbc_trace: false
  odbc_trace_file: "logs/odbc_trace.log"